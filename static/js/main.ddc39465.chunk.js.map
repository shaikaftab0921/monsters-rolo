{"version":3,"sources":["components/Card.components.jsx","components/CardList.jsx","components/SearchBox.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","monster","id","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","state","searchField","fetch","then","response","json","users","setState","this","Filteredmonsters","filter","toLowerCase","includes","e","target","value","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mUAEaA,EAAK,SAACC,GAAD,OAClB,sBAAKC,UAAU,iBAAf,UACA,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,QAAQC,GAAxC,4BAClB,6BAAML,EAAMI,QAAQE,OACpB,4BAAIN,EAAMI,QAAQG,YCHTC,G,MAAS,SAAAR,GAAK,OAC1B,qBAAKC,UAAU,YAAf,SACID,EAAMS,SAASC,KAAI,SAAAN,GAAO,OAAI,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,WCFzCM,G,MAAU,SAAC,GAAD,IAAEC,EAAF,EAAEA,YAAYC,EAAd,EAAcA,aAAd,OAEvB,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAC1CG,SAAUF,MCiCNG,E,kDAjCb,aACC,IAAD,8BACE,gBACKC,MAAM,CACTR,SAAS,GACTS,YAAY,IAJhB,E,qDAOA,WAAoB,IAAD,OACjBC,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAGA,EAASC,UACzBF,MAAK,SAAAG,GAAK,OAAE,EAAKC,SAAS,CAACf,SAASc,S,oBAEvC,WAAS,IAAD,OACP,EAA6BE,KAAKR,MAA3BR,EAAP,EAAOA,SAASS,EAAhB,EAAgBA,YACVQ,EAAiBjB,EAASkB,QAAO,SAAAvB,GAAO,OAC7CA,EAAQE,KAAKsB,cAAcC,SAASX,EAAYU,kBAElD,OACE,sBAAK3B,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CACEW,YAAY,iBACZC,aAAc,SAAAiB,GAAC,OAAE,EAAKN,SAAS,CAACN,YAAYY,EAAEC,OAAOC,WAGzD,cAAC,EAAD,CAAWvB,SAAUiB,W,GA3BNO,aCOJC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.ddc39465.chunk.js","sourcesContent":["import React from \"react\";\r\nimport './card.styles.css';\r\nexport const Card=(props)=>(\r\n<div className=\"card-container\">\r\n<img alt=\"monster\" src={`https://robohash.org/${props.monster.id}?set=set2&size=180x180`}/>\r\n    <h2 >{props.monster.name}</h2>\r\n    <p>{props.monster.email}</p>\r\n</div>\r\n\r\n);\r\n","import React from 'react';\r\nimport { Card } from './Card.components';\r\nimport './card-list.styles.css';\r\nexport const CardList=props=>(\r\n <div className=\"card-list\">\r\n    {props.monsters.map(monster=>( <Card key={monster.id} monster={monster}/>))}\r\n </div>\r\n\r\n);","import React from \"react\";\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox=({placeholder,handleChange})=>(\r\n   \r\n<input className=\"search\" type=\"search\" placeholder={placeholder} \r\n           onChange={handleChange}  />\r\n);\r\n","import React,{ Component}  from 'react';\nimport './App.css';\nimport { CardList } from './components/CardList';\nimport { SearchBox } from './components/SearchBox';\n\nclass  App extends Component  {\n  constructor()\n  {\n    super();\n    this.state={\n      monsters:[],\n      searchField:\"\"\n    };\n  }\n  componentDidMount(){\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response=> response.json())\n    .then(users=>this.setState({monsters:users}))\n  }\n  render(){\n   const {monsters,searchField}=this.state;\n   const Filteredmonsters=monsters.filter(monster=>\n    monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n  return (\n    <div className='App'>\n      <h1>Monsters Rolodex</h1>\n      <SearchBox\n        placeholder=\"Search monster\"\n        handleChange={e=>this.setState({searchField:e.target.value})}\n      />\n          \n    <CardList  monsters={Filteredmonsters}/>\n    </div>\n  \n  );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}